/******************************************************************
Site Name:
Author:

Stylesheet: Mixins Stylesheet

This is where you can take advantage of Sass' great features: Mixins.
I won't go in-depth on how they work exactly,
there are a few articles below that will help do that. What I will
tell you is that this will help speed up simple changes like
changing a color or adding CSS3 techniques gradients.

A WORD OF WARNING: It's very easy to overdo it here. Be careful and
remember less is more.

Helpful:
http://sachagreif.com/useful-sass-mixins/
http://thesassway.com/intermediate/leveraging-sass-mixins-for-cleaner-code
http://web-design-weekly.com/blog/2013/05/12/handy-sass-mixins/

******************************************************************/


/*********************
TRANSITION
*********************/

/*
I totally rewrote this to be cleaner and easier to use.
You'll need to be using Sass 3.2+ for these to work.
Thanks to @anthonyshort for the inspiration on these.
USAGE: @include transition(all 0.2s ease-in-out);
*/

@mixin transition($transition...) {
  // defining prefixes so we can use them in mixins below
  $prefixes:      ("-webkit-", "" );
  @each $prefix in $prefixes {
    #{$prefix}transition: $transition;
  }
}
@mixin transitionjo($time: 0.4s) {
      -webkit-transition: all $time;
      -moz-transition: all $time;
      -ms-transition: all $time;
      -o-transition: all $time;
      transition: all $time;
}
/*********************
CSS3 GRADIENTS
Be careful with these since they can
really slow down your CSS. Don't overdo it.
*********************/

/* @include css-gradient(#dfdfdf,#f8f8f8); */
@mixin css-gradient($from: #dfdfdf, $to: #f8f8f8) {
	background-color: $to;
	background-image: -webkit-gradient(linear, left top, left bottom, from($from), to($to));
	background-image: -webkit-linear-gradient(top, $from, $to);
	background-image: -moz-linear-gradient(top, $from, $to);
	background-image: -o-linear-gradient(top, $from, $to);
	background-image: linear-gradient(to bottom, $from, $to);
}

/*********************
BOX SIZING
*********************/

/* @include box-sizing(border-box); */
/* NOTE: value of "padding-box" is only supported in Gecko. So
probably best not to use it. I mean, were you going to anyway? */
@mixin box-sizing($type: border-box) {
	-webkit-box-sizing: $type;
	-moz-box-sizing:    $type;
	-ms-box-sizing:     $type;
	box-sizing:         $type;
}

/*********************
BOX SHADOW
*********************/

/* @include box-shadow(0,0,20px); */
/* NOTE: value of "padding-box" is only supported in Gecko. So
probably best not to use it. I mean, were you going to anyway? */
@mixin box-shadow($hoffset: 0, $voffset: 0, $spread: 20px, $shadow-opacity: 0.5) {
  
	box-shadow: $hoffset $voffset $spread #454545;
	-webkit-box-shadow: $hoffset $voffset $spread rgba(0, 0, 0, $shadow-opacity);
	-moz-box-shadow: $hoffset $voffset $spread rgba(0, 0, 0, $shadow-opacity);
	-ms-box-shadow: $hoffset $voffset $spread rgba(0, 0, 0, $shadow-opacity);
	box-shadow: $hoffset $voffset $spread rgba(0, 0, 0, $shadow-opacity);
}
@mixin text-shadow($hoffset: 0, $voffset: 0, $spread: 8px, $shadow-opacity: 0.5) {
	text-shadow: $hoffset $voffset $spread #454545;
	text-shadow: $hoffset $voffset $spread rgba(0, 0, 0, $shadow-opacity);
}

/*********************
OPACITY
*********************/

@mixin opacity($iefilter: 0, $regfilter: 0) {
	-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=$iefilter)";
	filter: alpha(opacity=$iefilter);
	-moz-opacity: $regfilter;
	-khtml-opacity: $regfilter;
	opacity: $regfilter;
}
/*********************
STACK APPEARANCE
*********************/
@mixin stack() {
	z-index: 50;
	margin-bottom: 0.5em;
	background: $gray;
    box-shadow:  4px 4px 0 $border-color;

	&:hover, &:focus {
        background-color: $light-gray;
        box-shadow:  5px 5px 0 $border-color;		
	}
}